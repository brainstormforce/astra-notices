
name: PHPUnit + PHPCS

on: pull_request

jobs:
  phpunit:
    name: PHPUnit (PHP ${{ matrix.php }} with WordPress ${{ matrix.wordpress }}) + PHPCS
    runs-on: ubuntu-latest

    env:
      DB_HOST: 127.0.0.1
      DB_NAME: local
      DB_USER: root
      DB_PASS: root

    services:
      mysql:
        image: mysql:5.7
        env:
           MYSQL_ALLOW_EMPTY_PASSWORD: yes
           MYSQL_DATABASE: local
           MYSQL_ROOT_PASSWORD: root
        ports:
           - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    strategy:
      fail-fast: false
      matrix:
        php: ['8.1']
        wordpress: ['trunk']

    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          coverage: none
          tools: composer:v2, cs2pr  # Specify Composer v2 explicitly

      # - name: Cache Composer dependencies
      #   uses: actions/cache@v4
      #   with:
      #     path: vendor
      #     key: ${{ runner.os }}-php-${{ matrix.php }}-composer-${{ hashFiles('composer.lock') }}
      #     restore-keys: |
      #       ${{ runner.os }}-php-${{ matrix.php }}-composer-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-interaction

      - name: Setup problem matchers for PHPUnit
        run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Run tests
        run: composer run test
        env:
          WP_DB_NAME: ${{ env.DB_NAME }}
          WP_DB_USER: ${{ env.DB_USER }}
          WP_DB_PASS: ${{ env.DB_PASS }}
          WP_DB_HOST: ${{ env.DB_HOST }}

      - name: Check PHPCS version
        run: vendor/bin/phpcs --version
  
      - name: Run PHPCS
        if: always()  # Runs even if tests fail
        run: |
          vendor/bin/phpcs -d memory_limit=512M
        continue-on-error: false  # Fail the job on PHPCS errors
